---
/**
 * Skills Component
 * 
 * 技能展示区域：
 * - 标题区域（带下划线装饰）
 * - 无限滚动的技能标签（跑马灯效果）
 * - 悬停时暂停滚动
 * - 三组重复内容确保无缝循环
 */

import content from '../data/content.json';

const { skills } = content;
---

<section id="skills" class="py-20 px-4 overflow-hidden relative z-10">
  <div class="max-w-6xl mx-auto mb-12">
    <!-- 标题区域 -->
    <h2 class="text-5xl md:text-6xl font-bold text-center mb-4 text-gradient animate-gradient">
      {skills.title}
    </h2>
    <div class="w-20 h-1 bg-gradient-to-r from-cyan-400 to-blue-500 mx-auto rounded-full"></div>
  </div>

  <!-- 跑马灯容器 -->
  <div class="relative">
    <div class="marquee-container">
      <div class="marquee-content" id="marquee-content">
        {/* 第一组 */}
        {skills.items.map((skill) => (
          <div class="marquee-item glass rounded-full px-8 py-4 mx-3 hover:glow-effect transition-all duration-300 hover:scale-110 group">
            <span class="text-xl font-medium text-gray-200 group-hover:text-gradient group-hover:animate-gradient whitespace-nowrap transition-all duration-300">
              {skill}
            </span>
          </div>
        ))}
        
        {/* 第二组 - 无缝循环 */}
        {skills.items.map((skill) => (
          <div class="marquee-item glass rounded-full px-8 py-4 mx-3 hover:glow-effect transition-all duration-300 hover:scale-110 group">
            <span class="text-xl font-medium text-gray-200 group-hover:text-gradient group-hover:animate-gradient whitespace-nowrap transition-all duration-300">
              {skill}
            </span>
          </div>
        ))}
        
        {/* 第三组 - 防止穿帮 */}
        {skills.items.map((skill) => (
          <div class="marquee-item glass rounded-full px-8 py-4 mx-3 hover:glow-effect transition-all duration-300 hover:scale-110 group">
            <span class="text-xl font-medium text-gray-200 group-hover:text-gradient group-hover:animate-gradient whitespace-nowrap transition-all duration-300">
              {skill}
            </span>
          </div>
        ))}
      </div>
    </div>
  </div>
</section>

<script>
  /**
   * 确保动画从正确的位置开始
   */
  document.addEventListener('DOMContentLoaded', () => {
    const marqueeContent = document.getElementById('marquee-content');
    if (marqueeContent) {
      // 强制重新启动动画，确保无缝循环
      marqueeContent.style.animation = 'none';
      setTimeout(() => {
        marqueeContent.style.animation = '';
      }, 10);
    }
  });
</script>

<style>
  /* ========================================
     跑马灯容器
     ======================================== */
  .marquee-container {
    position: relative;
    width: 100%;
    overflow: hidden;
    padding: 20px 0;
    
    /* 渐变遮罩：左右两侧淡出 */
    mask-image: linear-gradient(
      to right,
      transparent,
      black 10%,
      black 90%,
      transparent
    );
    -webkit-mask-image: linear-gradient(
      to right,
      transparent,
      black 10%,
      black 90%,
      transparent
    );
  }

  /* ========================================
     跑马灯内容
     ======================================== */
  .marquee-content {
    display: flex;
    animation: marquee 30s linear infinite;
    width: fit-content;
    will-change: transform;
  }

  /* 悬停时暂停 */
  .marquee-content:hover {
    animation-play-state: paused;
  }

  .marquee-item {
    flex-shrink: 0;
  }

  /* ========================================
     跑马灯动画
     ======================================== */
  @keyframes marquee {
    from {
      transform: translateX(0);
    }
    to {
      /* 移动 1/3（因为有3组重复内容） */
      transform: translateX(-33.333%);
    }
  }

  /* ========================================
     响应式调整
     ======================================== */
  @media (max-width: 768px) {
    .marquee-content {
      animation-duration: 20s;
    }
  }

  /* ========================================
     无障碍优化
     ======================================== */
  
  /* 默认：动画运行 */
  @media (prefers-reduced-motion: no-preference) {
    .marquee-content {
      animation-play-state: running;
    }
  }

  /* 用户偏好：减少动态效果 */
  @media (prefers-reduced-motion: reduce) {
    .marquee-content {
      animation: none;
    }
  }
</style>
